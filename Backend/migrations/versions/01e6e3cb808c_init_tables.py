"""Init tables

Revision ID: 01e6e3cb808c
Revises: 
Create Date: 2024-05-28 19:19:11.770929

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '01e6e3cb808c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=10), nullable=False),
    sa.Column('email', sa.String(length=20), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('registered_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_table('vacancy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('work_experience', sa.Enum('no_experience', 'up_to_1_year', 'between_1_and_3', 'between_3_and_6', 'more_than_6', name='workexperience'), nullable=False),
    sa.Column('work_format', sa.Enum('office', 'home', 'hybrid', 'discuss', name='workformat'), nullable=False),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.Column('skills', sa.String(), nullable=False),
    sa.Column('about', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resume',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.String(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('sex', sa.Enum('male', 'female', 'other', name='sex'), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('lived_in', sa.String(), nullable=True),
    sa.Column('want_salary', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('looking_for_job', 'not_looking_for_a_job', 'considers_proposals', 'offered_a_job_decides', name='intereststatus'), nullable=False),
    sa.Column('about', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resume')
    op.drop_table('vacancy')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
